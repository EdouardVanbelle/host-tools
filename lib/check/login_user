#!/bin/bash

DESCRIPTION="ensure only listed users allowed to have a direct"

init() {
    # formal entry (kepts for compatibility)
    ALLOW_ROOT_PASSWORD="NO"
    USER_PASSWORD_ALLOWED=()
}

run() {
    local RETURN=$CHECK_SUCCESS
    local CURRENT_USER IGNORED NAME CUID CGID CURRENT_USER_HOME CURRENT_USER_SHELL CURRENT_USER_PASS

    # Caveat works only for sshd, does not support dropbear
    explain "checking if sshd permits root password login"
    if [ -e /etc/ssh/sshd_config ]
    then
        if grep -q -E '^PermitRootLogin[[:space:]]+yes' /etc/ssh/sshd_config
        then
            alert "ssh root login is permitted, please restrict via at least 'PermitRootLogin prohibit-password' in /etc/ssh/sshd_config"
            RETURN=$(max $? $RETURN)
        else
            echo "good: ssh root login is resticted or denied"
        fi
    fi

    OLDIFS="$IFS"
    explain "checking active user"
    while IFS=":" read -r CURRENT_USER IGNORED NAME CUID CGID CURRENT_USER_HOME CURRENT_USER_SHELL
    do

        LOGIN_ENABLED=1
        if [ -z "$CURRENT_USER_SHELL" ] || [[ "$CURRENT_USER_SHELL" =~ nologin ]] || [[ "$CURRENT_USER_SHELL" =~ "false" ]]
        then
            LOGIN_ENABLED=0
        fi

        IFS=":"
        read -r IGNORED CURRENT_USER_PASS IGNORED <<< $(getent shadow $CURRENT_USER)
        IFS="$OLDIFS"

        if [ "$CURRENT_USER_PASS" = "*" ] || [[ "$CURRENT_USER_PASS" =~ ^! ]]
        then
            # password is disabled

            if [ $LOGIN_ENABLED -eq 0 ]
            then
                # password is disabled and login too, ignore
                continue
            fi

            SSH=""

            if [ -e $CURRENT_USER_HOME/.ssh/authorized_keys ] || [ -e $CURRENT_USER_HOME/.ssh/authorized_keys ]
            then
                SSH="connection seems possible via sshkey"
            fi
            echo "$CURRENT_USER has no active password $SSH"

            continue
        fi

        # from here passwrd is active

        if [ $LOGIN_ENABLED -eq 0 ]
        then
            silent_alert "$CURRENT_USER is login disabled but it's password is active, please check"
            RETURN=$(max $? $RETURN)
            continue
        fi

        if contains "$CURRENT_USER" "${USER_PASSWORD_ALLOWED[@]}" || ( [ $CURRENT_USER = "root" ] && to_boolean $ALLOW_ROOT_PASSWORD )
        then
            echo "$CURRENT_USER is allowed to have an active password"
        else
            alert "$CURRENT_USER is not allowed to have an active password"
            RETURN=$(max $? $RETURN)
        fi

    done < <(getent passwd)


    IFS="$OLDIFS"

    return $RETURN

}
