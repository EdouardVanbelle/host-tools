#!/bin/bash

DESCRIPTION="check hardware vulnerability"

init() {
    KERNEL_VULN_IGNORE=""
    HW_CACHE_TTL=7
}

run() {
   explain "check cpu vulnerability (microcode to upgrade)"

   if ! which dmesg >/dev/null
   then
       # note: could also use dmesg
       abort "dmesg not found [ignoring test]"
       return $CHECK_IMPOSSIBLE
   fi

   local CACHE="$VARDIR/vulnerabilities"

   if [ -e $CACHE ]
   then
       local NOW=$(date +'%s')
       local CTIME=$(stat -c '%Y' $CACHE)

       if [ $[ $NOW - $CTIME ] -gt $[ 3600 * 24 * $HW_CACHE_TTL ] ]
       then
               echo "$CACHE is older than $HW_CACHE_TTL days, purging it"
               rm -f $CACHE
       fi
   fi

   if [ ! -e $CACHE ]
   then
       # -p2 = alert & crit
       dmesg -k -t | grep -i 'vulnerable:' > $CACHE

       # if file is non empty
       if [ -s $CACHE ]
       then

           local OLDIFS=$IFS
           IFS=$'\n'
           for LINE in $(cat $CACHE)
           do
               if [ -n "$KERNEL_VULN_IGNORE" ] && echo "$LINE" | grep -q -E "$KERNEL_VUNL_IGNORE"
               then
                   silent_alert "found hardw. vuln.: $LINE"
                   continue
               fi

               alert "found hardw. vuln.: $LINE"
           done
           IFS=$OLDIFS
       fi
   fi
}

