#!/bin/bash

DESCRIPTION="check disk health and temperature"

init() {
    SILENT_BADSECTOR=()
    BADSECTORLIMIT=0
    BADTEMPLIMIT=50
}

run() {

    if detect_virt
    then
        abort "this is a virtual machine, test is not relevant [ignoring test]"
        return $CHECK_IGNORED
    fi

    if [ -z "$(find_disks sd)" ]
    then
        abort "no SSD/HD found [ignoring test]"
        return $CHECK_IGNORED
    fi

    if ! which smartctl >/dev/null
    then
        abort "smartctl not installed (fix: apt-get install smartmontools) [ignoring test]"
        return $CHECK_IMPOSSIBLE
    fi

    #if which lshw >/dev/null
    #then
    #       # disk list
    #       DISKS=$(lshw -class disk -short -quiet | tail -n +3 | awk '{ print $2; }')
    #else
    #       echo "lshw not installed get disk list via /dev/disk (better via: apt-get install lshw)"
    #       DISKS=$(readlink -f /dev/disk/by-id/* | grep -e '[a-z]$' | sort | uniq )
    #fi

    local DISK SHORT

    # foreach disk
    for DISK in $( find_disks sd)
    do
        SHORT="${DISK##*/}"
        explain "checking sd disk $DISK"
        if [ -e "/sys/block/$SHORT/queue/rotational" ]
        then
            if [ $(cat "/sys/block/$SHORT/queue/rotational") == 1 ]
            then
                echo "$DISK seems to be a HDD"
            else
                echo "$DISK seems to be a SSD"
            fi
        else
            echo "$DISK is neither a HDD nor a SSD"
        fi

        # foreach smartctl

        # smartctl 6.6 2017-11-05 r4594 [x86_64-linux-4.19.0-8-amd64] (local build)
        # Copyright (C) 2002-17, Bruce Allen, Christian Franke, www.smartmontools.org
        #
        # === START OF READ SMART DATA SECTION ===
        # SMART Attributes Data Structure revision number: 16
        # Vendor Specific SMART Attributes with Thresholds:
        # ID# ATTRIBUTE_NAME          FLAG     VALUE WORST THRESH TYPE      UPDATED  WHEN_FAILED RAW_VALUE
        #   1 Raw_Read_Error_Rate     0x000b   100   100   016    Pre-fail  Always       -       0
        #   2 Throughput_Performance  0x0005   136   136   054    Pre-fail  Offline      -       80
        #   3 Spin_Up_Time            0x0007   193   193   024    Pre-fail  Always       -       248 (Average 399)
        #   4 Start_Stop_Count        0x0012   100   100   000    Old_age   Always       -       16
        #   5 Reallocated_Sector_Ct   0x0033   100   100   005    Pre-fail  Always       -       0
        #   7 Seek_Error_Rate         0x000b   100   100   067    Pre-fail  Always       -       0
        #   8 Seek_Time_Performance   0x0005   145   145   020    Pre-fail  Offline      -       24
        #   9 Power_On_Hours          0x0012   095   095   000    Old_age   Always       -       39172
        #  10 Spin_Retry_Count        0x0013   100   100   060    Pre-fail  Always       -       0
        #  12 Power_Cycle_Count       0x0032   100   100   000    Old_age   Always       -       16
        # 192 Power-Off_Retract_Count 0x0032   100   100   000    Old_age   Always       -       16
        # 193 Load_Cycle_Count        0x0012   100   100   000    Old_age   Always       -       16
        # 194 Temperature_Celsius     0x0002   166   166   000    Old_age   Always       -       36 (Min/Max 18/49)
        # 196 Reallocated_Event_Count 0x0032   100   100   000    Old_age   Always       -       0
        # 197 Current_Pending_Sector  0x0022   100   100   000    Old_age   Always       -       0
        # 198 Offline_Uncorrectable   0x0008   100   100   000    Old_age   Offline      -       0
        # 199 UDMA_CRC_Error_Count    0x000a   200   200   000    Old_age   Always       -       0

        local ID ATTRIBUTE_NAME FLAG VALUE WORST THRESH TYPE UPDATED WHEN_FAILED RAW_VALUE
        while read -r ID ATTRIBUTE_NAME FLAG VALUE WORST THRESH TYPE UPDATED WHEN_FAILED RAW_VALUE
        do
            [ -z "$ATTRIBUTE_NAME" ] && continue
            [ -z "$RAW_VALUE" ] && continue

            # debug echo "$DISK $ATTRIBUTE_NAME $RAW_VALUE"

            local do_alert="alert"
            contains "$DISK" "${SILENT_BADSECTOR[@]}" && do_alert="silent_alert"

            # source: https://en.wikipedia.org/wiki/S.M.A.R.T.#Known_ATA_S.M.A.R.T._attributes
            case "$ID" in
                "5")
                    #id=5 "Reallocated_Sector_Ct" (bad for HD and SSD)
                    echo "INFO: Reallocated Sector Count: $RAW_VALUE"
                    [ $RAW_VALUE -gt $BADSECTORLIMIT ] && $do_alert "$DISK has $RAW_VALUE bad sectors";
                    ;;
                "7")
                    #id=5 "Spin_Retry_Count" (bad for HD)
                    # https://kb.acronis.com/content/9110
                    echo "INFO: Spin Retry Count: $RAW_VALUE"
                    # TODO: warn if growing up [ $RAW_VALUE -gt $BADSECTORLIMIT ] && $do_alert "$DISK has $RAW_VALUE spin retry";
                    ;;

                "187")
                    #id=187 "Reported Uncorrectable Errors"    (bad SSD)
                    echo "INFO: Reported Uncorrectable Errors: $RAW_VALUE"
                    [ $RAW_VALUE -gt $BADSECTORLIMIT ] && $do_alert "$DISK has $RAW_VALUE uncorrectable errors";
                    ;;

                "188")
                    #id=188 "Command Timeout"
                                        RAW_VALUE="${RAW_VALUE%% *}" # remove all YY in "XX YY"
                    echo "INFO: Reported command timeout: $RAW_VALUE"
                    [ $RAW_VALUE -gt $BADSECTORLIMIT ] && $do_alert "$DISK has $RAW_VALUE command timeout";
                    ;;

                "194")
                    #id=194 Temperature_Celsius
                                        RAW_VALUE="${RAW_VALUE%% *}" # remove all YY in "XX YY"
                    echo "INFO: Temperature Celsius: $RAW_VALUE"
                    [ $RAW_VALUE -gt $BADTEMPLIMIT ] && $do_alert "$DISK has temperature $RAW_VALUE too high";
                    ;;

                "196")
                    #id=196 "Reallocation Event Count"
                    echo "INFO: Reported command timeout: $RAW_VALUE"
                    ;;

                "197")
                    #id=197 "Current_Pending_Sector"
                    echo "INFO: Current Pending Sector: $RAW_VALUE"
                    [ $RAW_VALUE -gt $BADSECTORLIMIT ] && $do_alert "$DISK has $RAW_VALUE coming bad sectors";
                    ;;

                "201")
                    #id=201    "Soft Read Error Rate"
                    # https://kb.acronis.com/content/9137
                    RAW_VALUE="${RAW_VALUE%%/*}" # remove all /YY in "XX/YY"
                    echo "INFO: Soft read error: $RAW_VALUE"
                    # TODO: WARN if growing up [ $RAW_VALUE -gt $BADSECTORLIMIT ] && $do_alert "$DISK has $RAW_VALUE read errors";
                    ;;

            esac

        done < <( smartctl -A /dev/$DISK 2>/dev/null )
    done
}

